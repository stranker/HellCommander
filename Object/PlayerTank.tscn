[gd_scene load_steps=7 format=2]

[ext_resource path="res://Object/Proyectile.tscn" type="PackedScene" id=1]
[ext_resource path="res://Sprites/PlayerTank.png" type="Texture" id=2]
[ext_resource path="res://Sprites/PlayerTurret.png" type="Texture" id=3]
[ext_resource path="res://UI/Display.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]

resource_name = "PlayerTank.gd"
script/source = "extends KinematicBody2D

export var speed = 100.0
export var maxHealth = 5
export var tankDamage = 1
var health = maxHealth
export var rotationSpeed = 1.5
export (PackedScene) var proyectile

var velocity = Vector2()
slave var slave_position = Vector2()
slave var slave_rotation = 0
slave var slave_turret_rotation = 0
var turretRotation = 0
var rotationDir = 0
var canShoot = true

func _ready():
	pass

func _process(delta):
	rotationDir = 0
	velocity = Vector2()
	if is_network_master():
		if Input.is_action_pressed(\"ui_right\"):
			rotationDir += 1
		elif Input.is_action_pressed(\"ui_left\"):
			rotationDir -= 1
		if Input.is_action_pressed(\"ui_down\"):
			velocity = Vector2(-speed, 0).rotated(rotation)
		elif Input.is_action_pressed(\"ui_up\"):
			velocity = Vector2(speed, 0).rotated(rotation)
		rotation += rotationDir * rotationSpeed * delta
		rset_unreliable('slave_position', position)
		rset_unreliable('slave_rotation', rotation)
		move_and_slide(velocity)
		$Turret.look_at(get_global_mouse_position())
		turretRotation = $Turret.rotation
		rset_unreliable('slave_turret_rotation', turretRotation)
		$Camera.current = true
		if Input.is_mouse_button_pressed(BUTTON_LEFT):
			rpc(\"shoot\")
	else:
		move_and_slide(velocity)
		position = slave_position
		rotation = slave_rotation
		$Turret.rotation = slave_turret_rotation
	if get_tree().is_network_server():
		Network.update_player(int(name),position,rotation,slave_turret_rotation)
	pass

func init(nickname, start_position, is_slave):
	$Display.init(nickname,maxHealth)
	global_position = start_position
	#if is_slave:
	#	$Sprite.texture = load('res://player/player-alt.png')
	pass

sync func shoot():
	if canShoot:
		canShoot = false
		var p = proyectile.instance()
		get_tree().root.call_deferred(\"add_child\",p)
		p.position = $Turret/ShootPos.global_position
		var shootDir = ($Turret/ShootPos.global_position - $Turret.global_position).normalized()
		p.initialize(shootDir,tankDamage,self)
		$ShootTime.start()

func _on_ShootTime_timeout():
	canShoot = true
	pass # replace with function body

func set_turret_rotation(val):
	$Turret.rotation = val

func take_damage(val):
	health -= val
	$Display.update_health_bar(health)"
_sections_unfolded = [ "Resource" ]

[sub_resource type="RectangleShape2D" id=2]

custom_solver_bias = 0.0
extents = Vector2( 15.7986, 14.9761 )

[node name="PlayerTank" type="KinematicBody2D" index="0" groups=[
"Tank",
]]

input_pickable = false
collision_layer = 1
collision_mask = 1
collision/safe_margin = 0.08
script = SubResource( 1 )
_sections_unfolded = [ "Transform" ]
speed = 100.0
maxHealth = 5
tankDamage = 1
rotationSpeed = 1.5
proyectile = ExtResource( 1 )

[node name="Body" type="Sprite" parent="." index="0"]

texture = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="." index="1"]

shape = SubResource( 2 )
_sections_unfolded = [ "Visibility" ]

[node name="Turret" type="Sprite" parent="." index="2"]

texture = ExtResource( 3 )

[node name="ShootPos" type="Position2D" parent="Turret" index="0"]

position = Vector2( 16.0979, -0.452896 )

[node name="ShootTime" type="Timer" parent="." index="3"]

process_mode = 1
wait_time = 1.0
one_shot = true
autostart = false

[node name="Display" parent="." index="4" instance=ExtResource( 4 )]

[node name="Camera" type="Camera2D" parent="." index="5"]

anchor_mode = 1
rotating = false
current = false
zoom = Vector2( 1, 1 )
limit_left = -10000000
limit_top = -10000000
limit_right = 10000000
limit_bottom = 10000000
limit_smoothed = false
drag_margin_h_enabled = false
drag_margin_v_enabled = false
smoothing_enabled = true
smoothing_speed = 5.0
offset_v = 0.0
offset_h = 0.0
drag_margin_left = 0.2
drag_margin_top = 0.2
drag_margin_right = 0.2
drag_margin_bottom = 0.2
editor_draw_screen = true
editor_draw_limits = false
editor_draw_drag_margin = false

[connection signal="timeout" from="ShootTime" to="." method="_on_ShootTime_timeout"]


