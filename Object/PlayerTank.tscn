[gd_scene load_steps=53 format=2]

[ext_resource path="res://Object/Proyectile.tscn" type="PackedScene" id=1]
[ext_resource path="res://Sprites/Heal.png" type="Texture" id=2]
[ext_resource path="res://Sprites/Particle.png" type="Texture" id=3]
[ext_resource path="res://Sprites/PlayerTank.png" type="Texture" id=4]
[ext_resource path="res://Sprites/PlayerTurret.png" type="Texture" id=5]
[ext_resource path="res://UI/Display.tscn" type="PackedScene" id=6]
[ext_resource path="res://Object/CameraShake.tscn" type="PackedScene" id=7]
[ext_resource path="res://Sprites/Explosion.png" type="Texture" id=8]

[sub_resource type="GDScript" id=1]
resource_name = "PlayerTank.gd"
script/source = "extends KinematicBody2D

export var speed = 100.0
export var maxHealth = 5
export var maxShield = 3
var shield = maxShield
var health = maxHealth
export var tankDamage = 1
export var rotationSpeed = 1.5
export (PackedScene) var proyectile
var velocity = Vector2()
puppet var slave_position = Vector2()
puppet var slave_rotation = 0
puppet var slave_turret_rotation = 0
var turretRotation = 0
var rotationDir = 0
var can_shoot = true
var spectate_index = 0
var nickname
var spectating_player = null
var current_anim = ''
var new_anim = ''

func _ready():
	current_anim = 'Appear'
	pass

func _process(delta):
	rotationDir = 0
	velocity = Vector2()
	if is_network_master():
		if is_alive():
			if Input.is_action_pressed(\"ui_right\"):
				rotationDir += 1
			elif Input.is_action_pressed(\"ui_left\"):
				rotationDir -= 1
			if Input.is_action_pressed(\"ui_down\"):
				velocity = Vector2(-speed, 0).rotated(rotation)
			elif Input.is_action_pressed(\"ui_up\"):
				velocity = Vector2(speed, 0).rotated(rotation)
			$Turret.look_at(get_global_mouse_position())
			if Input.is_mouse_button_pressed(BUTTON_LEFT):
				rpc(\"shoot\")
			rotation += rotationDir * rotationSpeed * delta
			rset_unreliable('slave_position', position)
			rset_unreliable('slave_rotation', rotation)
			move_and_slide(velocity)
			turretRotation = $Turret.rotation
			rset_unreliable('slave_turret_rotation', turretRotation)
			$Camera.current = true
			$Particles/Dust.emitting = velocity.length() > 0 or rotationDir != 0
			$Particles/Dust2.emitting = velocity.length() > 0 or rotationDir != 0
			$Particles/Trail.emitting = velocity.length() > 0 or rotationDir != 0
			$Particles/Trail2.emitting = velocity.length() > 0 or rotationDir != 0
		else:
			if spectating_player:
				position = spectating_player.global_position
	else:
		move_and_slide(velocity)
		position = slave_position
		rotation = slave_rotation
		$Turret.rotation = slave_turret_rotation
	
	if is_alive():
		if velocity.length() > 0:
			new_anim = 'Driving'
		else:
			new_anim = 'Idle'
	if new_anim != current_anim:
		current_anim = new_anim
		$Anim.play(current_anim)
	pass

sync func shoot():
	if can_shoot:
		can_shoot = false
		var p = proyectile.instance()
		get_tree().root.add_child(p)
		p.position = $Turret/ShootPos.global_position
		var shootDir = ($Turret/ShootPos.global_position - $Turret.global_position).normalized()
		$Turret/Tween.stop_all()
		$Turret/Tween.interpolate_property($Turret,'offset',$Turret.offset, Vector2(-2,0),0.1,Tween.TRANS_EXPO,Tween.EASE_IN)
		$Turret/Tween.interpolate_property($Turret,'offset',$Turret.offset,Vector2(0,0),0.1,Tween.TRANS_LINEAR,Tween.EASE_OUT,0.2)
		$Turret/Tween.start()
		p.initialize(shootDir,tankDamage,!$DoubleDamageTimer.is_stopped(),self)
		p.connect('hit',self,'shake_camera')
		$Turret/ShootPos/Particles.restart()
		$ShootTime.start()
	pass

func _on_ShootTime_timeout():
	can_shoot = true
	pass # replace with function body

func set_turret_rotation(val):
	$Turret.rotation = val

master func take_tank_damage(val,enemy):
	if shield > 0:
		shield -= val
	else:
		health -= val
		$Anim.play(\"ReceiveDamage\")
	$Camera.shake(0.5,0.5)
	update_display()
	$Display.enable_damage_indicator(enemy)
	if !is_alive():
		rpc('destroy_tank')
	pass

func take_circle_damage(val):
	if is_alive():
		health -= val
		update_display()
	else:
		rpc('destroy_tank')
	pass

func is_alive():
	return health > 0

sync func destroy_tank():
	new_anim = 'Explosion'
	$Colision.disabled = !is_alive()
	$Display.set_active(false)
	set_active_particles(is_alive())
	for particles in $Effects.get_children():
		particles.emitting = false
	$Effects/ExpParticles.emitting = true
	pass

func initialize():
	health = maxHealth
	shield = maxShield
	$Body.show()
	$Turret.show()
	$Display.update_display(health,shield)
	$Colision.disabled = !is_alive()
	$Display.set_active(true)
	set_active_particles(is_alive())
	pass

func set_active_particles(val):
	for particles in $Particles.get_children():
		particles.emitting = val
	pass

func set_player_name(nick):
	$Display.init(nick,maxHealth,maxShield)
	nickname = nick
	pass

func shake_camera(distance):
	$Camera.shake(70/distance,0.5)
	pass

func _input(event):
	if event is InputEventMouseButton:
		if !is_alive() and !event.is_echo() and event.is_pressed() and is_network_master():
			change_camera_to_next_player(event)
	if event is InputEventKey:
		if !event.is_echo() and event.is_pressed() and event.scancode == KEY_Z and is_alive():
			take_tank_damage(1,null)
		if !event.is_echo() and event.is_pressed() and event.scancode == KEY_X:
			initialize()
	pass

func change_camera_to_next_player(event):
	if event.button_index == BUTTON_LEFT:
		spectate_index += 1
	elif event.button_index == BUTTON_RIGHT:
		spectate_index -= 1
	var players_alive = get_parent().get_players_alive()
	if spectate_index < 0:
		spectate_index = players_alive.size() - 1
	elif spectate_index >= players_alive.size():
		spectate_index = 0
	change_camera_to(spectate_index,players_alive)
	pass

func change_camera_to(index, players):
	spectating_player = players[index]
	if !is_alive():
		$PlayerUI/Spectator.text = 'Spectating: ' + players[index].nickname
	pass

func repair_tank(val):
	if is_alive():
		health += val
		if health > maxHealth:
			health = maxHealth
		update_display()
		$Effects/HealParticles.restart()
	pass

func update_display():
	$Display.update_display(health,shield)
	pass

func double_damage():
	if $DoubleDamageTimer.is_stopped():
		tankDamage *= 2
		$Effects/DoubleDamage.emitting = true
	else:
		$Effects/DoubleDamage.restart()
	$DoubleDamageTimer.start()
	$Display.activate_cooldown($DoubleDamageTimer.wait_time)
	pass

func _on_DoubleDamageTimer_timeout():
	tankDamage /= 2
	$DoubleDamageTimer.stop()
	$Effects/DoubleDamage.emitting = false
	pass # replace with function body"

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0, 0.604651, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="Curve" id=4]
max_value = 2.5
_data = [ Vector2( 0, 0.269531 ), 0.0, 0.410847, 0, 0, Vector2( 1, 2.5 ), 4.40286, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=5]
curve = SubResource( 4 )

[sub_resource type="ParticlesMaterial" id=6]
flag_disable_z = true
spread = 180.0
flatness = 1.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 25.0
angular_velocity = -2.22624e-034
orbit_velocity = 0.0
orbit_velocity_random = 0.0
damping = 10.0
scale_random = 0.5
scale_curve = SubResource( 5 )
color_ramp = SubResource( 3 )

[sub_resource type="Gradient" id=7]
offsets = PoolRealArray( 0, 0.230769, 0.621302, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 1, 0.914063, 0, 1, 1, 0, 0, 0.54698, 0, 0, 0, 0.370157 )

[sub_resource type="GradientTexture" id=8]
gradient = SubResource( 7 )

[sub_resource type="Curve" id=9]
max_value = 15.0
_data = [ Vector2( 0, 3.95508 ), 0.0, 0.0, 0, 0, Vector2( 1, 15 ), 34.1886, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=10]
curve = SubResource( 9 )

[sub_resource type="ParticlesMaterial" id=11]
emission_shape = 1
emission_sphere_radius = 0.5
flag_disable_z = true
spread = 180.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 50.0
initial_velocity_random = 0.2
angular_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
damping = 35.0
damping_random = 0.5
angle = 360.0
angle_random = 0.5
scale = 2.0
scale_random = 0.5
scale_curve = SubResource( 10 )
color_ramp = SubResource( 8 )

[sub_resource type="Gradient" id=12]
colors = PoolColorArray( 1, 1, 1, 1, 0, 0.976563, 1, 0.961294 )

[sub_resource type="GradientTexture" id=13]
gradient = SubResource( 12 )

[sub_resource type="Curve" id=14]
max_value = 2.0
_data = [ Vector2( 0, 0.140625 ), 0.0, 0.558244, 0, 0, Vector2( 1, 0.699219 ), 2.69195, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=15]
curve = SubResource( 14 )

[sub_resource type="Curve" id=16]
max_value = 2.0
_data = [ Vector2( 0, 0.763672 ), 0.0, -1.64687, 0, 0, Vector2( 1, 0 ), -0.8467, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=17]
curve = SubResource( 16 )

[sub_resource type="ParticlesMaterial" id=18]
trail_divisor = 50
trail_size_modifier = SubResource( 17 )
emission_shape = 1
emission_sphere_radius = 20.0
flag_disable_z = true
spread = 180.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 20.0
initial_velocity_random = 0.5
orbit_velocity = 1.0
orbit_velocity_random = 0.5
linear_accel = 25.0
tangential_accel = 20.0
tangential_accel_random = 0.5
damping = 20.0
scale = 0.0
scale_random = 0.7
scale_curve = SubResource( 15 )
color_ramp = SubResource( 13 )

[sub_resource type="Gradient" id=19]
offsets = PoolRealArray( 0, 0.532544, 1 )
colors = PoolColorArray( 0.191406, 0.191406, 0.191406, 1, 0.414063, 0.414063, 0.414063, 1, 1, 1, 1, 0.276275 )

[sub_resource type="GradientTexture" id=20]
gradient = SubResource( 19 )

[sub_resource type="Curve" id=21]
max_value = 4.0
_data = [ Vector2( 0, 1.93102 ), 0.0, 0.0, 0, 0, Vector2( 0.501458, 2.28971 ), 0.0, 0.0, 0, 0, Vector2( 1, 3.14503 ), 0.0, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=22]
curve = SubResource( 21 )

[sub_resource type="ParticlesMaterial" id=23]
flag_disable_z = true
spread = 10.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 30.0
initial_velocity_random = 0.2
angular_velocity = 360.0
angular_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
scale_curve = SubResource( 22 )
color_ramp = SubResource( 20 )

[sub_resource type="Gradient" id=24]
colors = PoolColorArray( 0.546875, 0.397339, 0, 1, 1, 1, 1, 0 )

[sub_resource type="GradientTexture" id=25]
gradient = SubResource( 24 )

[sub_resource type="Curve" id=26]
max_value = 4.0
_data = [ Vector2( 0, 2.73117 ), 0.0, 0.0, 0, 0, Vector2( 1, 4 ), 4.95918, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=27]
curve = SubResource( 26 )

[sub_resource type="ParticlesMaterial" id=28]
emission_shape = 1
emission_sphere_radius = 1.0
flag_disable_z = true
spread = 30.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 25.0
initial_velocity_random = 0.2
angular_velocity = 360.0
angular_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
scale_curve = SubResource( 27 )
color_ramp = SubResource( 25 )

[sub_resource type="Gradient" id=29]
colors = PoolColorArray( 0.203125, 0.152722, 0.0658569, 1, 0.210938, 0.156542, 0.0716858, 0 )

[sub_resource type="GradientTexture" id=30]
gradient = SubResource( 29 )

[sub_resource type="ParticlesMaterial" id=31]
trail_divisor = 5
flag_disable_z = true
spread = 2.0
gravity = Vector3( 0, 0, 0 )
orbit_velocity = 0.0
orbit_velocity_random = 0.0
color_ramp = SubResource( 30 )

[sub_resource type="Gradient" id=32]
offsets = PoolRealArray( 0, 0.39645, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0.265625, 0.265625, 0.265625, 0.715582, 0, 0, 0, 0.0386667 )

[sub_resource type="GradientTexture" id=33]
gradient = SubResource( 32 )

[sub_resource type="Curve" id=34]
max_value = 10.0
_data = [ Vector2( 0, 0.942382 ), 0.0, 0.0, 0, 0, Vector2( 0.710707, 9.18945 ), 3.98208, 3.98208, 0, 0, Vector2( 1, 10 ), 5.2004, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=35]
curve = SubResource( 34 )

[sub_resource type="ParticlesMaterial" id=36]
flag_disable_z = true
spread = 60.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 25.0
initial_velocity_random = 0.1
angular_velocity_random = 1.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
damping = 0.2
angle = 360.0
angle_random = 1.0
scale_random = 0.2
scale_curve = SubResource( 35 )
color_ramp = SubResource( 33 )

[sub_resource type="RectangleShape2D" id=37]
extents = Vector2( 15.7986, 14.9761 )

[sub_resource type="Animation" id=38]
tracks/0/type = "value"
tracks/0/path = NodePath("Body:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Turret:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Explosion:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Body:self_modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Turret:self_modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=39]
length = 0.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Body:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Body:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Turret:self_modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=40]
tracks/0/type = "value"
tracks/0/path = NodePath("Explosion:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Explosion:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Body:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Turret:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=41]
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Body:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Turret:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Body:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=42]
length = 0.6
tracks/0/type = "value"
tracks/0/path = NodePath("Turret:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 0, 0, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Body:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 0, 0, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="GDScript" id=44]
resource_name = "Detector.gd"
script/source = "extends Area2D

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


func _on_Detector_area_entered(area):
	if area.name == 'RoundCircle':
		area.register_player(get_parent())
	pass # Replace with function body.


func _on_Detector_area_exited(area):
	if area.name == 'RoundCircle':
		area.unregister_player(get_parent())
	pass # Replace with function body.


func _on_Detector_tree_entered():
	get_tree().root.get_node('GameScene/RoundCircle').unregister_player(get_parent())
	pass # Replace with function body.
"

[sub_resource type="CircleShape2D" id=43]
radius = 21.905

[node name="PlayerTank" type="KinematicBody2D" groups=[
"Tank",
]]
script = SubResource( 1 )
proyectile = ExtResource( 1 )

[node name="Effects" type="Node2D" parent="."]
editor/display_folded = true

[node name="HealParticles" type="Particles2D" parent="Effects"]
emitting = false
amount = 12
lifetime = 3.0
one_shot = true
speed_scale = 4.0
explosiveness = 0.9
randomness = 0.5
process_material = SubResource( 6 )
texture = ExtResource( 2 )

[node name="ExpParticles" type="Particles2D" parent="Effects"]
emitting = false
amount = 30
lifetime = 2.0
one_shot = true
speed_scale = 2.0
explosiveness = 0.8
process_material = SubResource( 11 )

[node name="DoubleDamage" type="Particles2D" parent="Effects"]
emitting = false
amount = 200
speed_scale = 0.7
randomness = 0.5
process_material = SubResource( 18 )
texture = ExtResource( 3 )

[node name="Particles" type="Node2D" parent="."]
editor/display_folded = true

[node name="Exhaust" type="Particles2D" parent="Particles"]
show_behind_parent = true
position = Vector2( -14.3591, -9.3946e-008 )
rotation = 3.14159
amount = 20
lifetime = 0.5
speed_scale = 1.5
randomness = 0.2
process_material = SubResource( 23 )

[node name="Dust" type="Particles2D" parent="Particles"]
show_behind_parent = true
position = Vector2( -15.9929, 13.1545 )
rotation = 3.14159
amount = 30
speed_scale = 2.0
local_coords = false
process_material = SubResource( 28 )

[node name="Dust2" type="Particles2D" parent="Particles"]
show_behind_parent = true
position = Vector2( -15.3316, -12.8242 )
rotation = 3.14159
amount = 30
speed_scale = 2.0
local_coords = false
process_material = SubResource( 28 )

[node name="Trail" type="Particles2D" parent="Particles"]
show_behind_parent = true
position = Vector2( -12, 13 )
rotation = 3.14159
amount = 100
lifetime = 5.0
local_coords = false
process_material = SubResource( 31 )

[node name="Trail2" type="Particles2D" parent="Particles"]
show_behind_parent = true
position = Vector2( -12, -13 )
rotation = 3.14159
amount = 100
lifetime = 5.0
local_coords = false
process_material = SubResource( 31 )

[node name="Body" type="Sprite" parent="."]
texture = ExtResource( 4 )
hframes = 4

[node name="Turret" type="Sprite" parent="."]
editor/display_folded = true
texture = ExtResource( 5 )

[node name="ShootPos" type="Position2D" parent="Turret"]
editor/display_folded = true
position = Vector2( 16.0979, -0.452896 )

[node name="Particles" type="Particles2D" parent="Turret/ShootPos"]
show_behind_parent = true
position = Vector2( 0.38999, 0.174835 )
emitting = false
amount = 16
one_shot = true
speed_scale = 2.0
explosiveness = 1.0
randomness = 0.5
local_coords = false
process_material = SubResource( 36 )

[node name="Tween" type="Tween" parent="Turret"]

[node name="Colision" type="CollisionShape2D" parent="."]
shape = SubResource( 37 )

[node name="ShootTime" type="Timer" parent="."]
one_shot = true

[node name="Display" parent="." instance=ExtResource( 6 )]

[node name="Camera" parent="." instance=ExtResource( 7 )]

[node name="Anim" type="AnimationPlayer" parent="."]
autoplay = "Appear"
anims/Appear = SubResource( 38 )
anims/Driving = SubResource( 39 )
anims/Explosion = SubResource( 40 )
anims/Idle = SubResource( 41 )
anims/ReceiveDamage = SubResource( 42 )

[node name="Explosion" type="Sprite" parent="."]
visible = false
texture = ExtResource( 8 )
hframes = 7

[node name="PlayerUI" type="CanvasLayer" parent="."]
editor/display_folded = true

[node name="Spectator" type="Label" parent="PlayerUI"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -97.0
margin_top = 50.0
margin_right = 103.0
margin_bottom = 64.0
custom_constants/shadow_as_outline = 2
align = 1
valign = 3

[node name="DoubleDamageTimer" type="Timer" parent="."]
wait_time = 7.0
one_shot = true

[node name="Detector" type="Area2D" parent="."]
editor/display_folded = true
script = SubResource( 44 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Detector"]
shape = SubResource( 43 )

[connection signal="timeout" from="ShootTime" to="." method="_on_ShootTime_timeout"]
[connection signal="timeout" from="DoubleDamageTimer" to="." method="_on_DoubleDamageTimer_timeout"]
[connection signal="area_entered" from="Detector" to="Detector" method="_on_Detector_area_entered"]
[connection signal="area_exited" from="Detector" to="Detector" method="_on_Detector_area_exited"]
[connection signal="tree_entered" from="Detector" to="Detector" method="_on_Detector_tree_entered"]
